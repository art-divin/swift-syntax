//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension GenericParameterClauseSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeLeftAngle")
  public var unexpectedBeforeLeftAngleBracket: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeLeftAngle
    }
    set {
      unexpectedBeforeLeftAngle = newValue
    }
  }
  
  @available(*, deprecated, renamed: "leftAngle")
  public var leftAngleBracket: TokenSyntax {
    get {
      return leftAngle
    }
    set {
      leftAngle = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenLeftAngleAndParameters")
  public var unexpectedBetweenLeftAngleBracketAndGenericParameterList: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenLeftAngleAndParameters
    }
    set {
      unexpectedBetweenLeftAngleAndParameters = newValue
    }
  }
  
  @available(*, deprecated, renamed: "parameters")
  public var genericParameterList: GenericParameterListSyntax {
    get {
      return parameters
    }
    set {
      parameters = newValue
    }
  }
  
  @available(*, deprecated, renamed: "addParameter")
  public func addGenericParameter(_ element: GenericParameterSyntax) -> GenericParameterClauseSyntax {
    return addParameter(element)
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenParametersAndGenericWhereClause")
  public var unexpectedBetweenGenericParameterListAndGenericWhereClause: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenParametersAndGenericWhereClause
    }
    set {
      unexpectedBetweenParametersAndGenericWhereClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenGenericWhereClauseAndRightAngle")
  public var unexpectedBetweenGenericWhereClauseAndRightAngleBracket: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenGenericWhereClauseAndRightAngle
    }
    set {
      unexpectedBetweenGenericWhereClauseAndRightAngle = newValue
    }
  }
  
  @available(*, deprecated, renamed: "rightAngle")
  public var rightAngleBracket: TokenSyntax {
    get {
      return rightAngle
    }
    set {
      rightAngle = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterRightAngle")
  public var unexpectedAfterRightAngleBracket: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterRightAngle
    }
    set {
      unexpectedAfterRightAngle = newValue
    }
  }
  
  @available(*, deprecated, renamed: "GenericParameterClauseSyntax(leadingTrivia:_:leftAngle:_:parameters:_:genericWhereClause:_:rightAngle:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeLeftAngleBracket: UnexpectedNodesSyntax? = nil,
      leftAngleBracket: TokenSyntax = .leftAngleToken(),
      _ unexpectedBetweenLeftAngleBracketAndGenericParameterList: UnexpectedNodesSyntax? = nil,
      genericParameterList: GenericParameterListSyntax,
      _ unexpectedBetweenGenericParameterListAndGenericWhereClause: UnexpectedNodesSyntax? = nil,
      genericWhereClause: GenericWhereClauseSyntax? = nil,
      _ unexpectedBetweenGenericWhereClauseAndRightAngleBracket: UnexpectedNodesSyntax? = nil,
      rightAngleBracket: TokenSyntax = .rightAngleToken(),
      _ unexpectedAfterRightAngleBracket: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeLeftAngleBracket, 
        leftAngle: leftAngleBracket, 
        unexpectedBetweenLeftAngleBracketAndGenericParameterList, 
        parameters: genericParameterList, 
        unexpectedBetweenGenericParameterListAndGenericWhereClause, 
        genericWhereClause: genericWhereClause, 
        unexpectedBetweenGenericWhereClauseAndRightAngleBracket, 
        rightAngle: rightAngleBracket, 
        unexpectedAfterRightAngleBracket, 
        trailingTrivia: trailingTrivia
      )
  }
}
