//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension TupleTypeElementSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeInoutKeyword")
  public var unexpectedBeforeInOut: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeInoutKeyword
    }
    set {
      unexpectedBeforeInoutKeyword = newValue
    }
  }
  
  @available(*, deprecated, renamed: "inoutKeyword")
  public var inOut: TokenSyntax? {
    get {
      return inoutKeyword
    }
    set {
      inoutKeyword = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenInoutKeywordAndFirstName")
  public var unexpectedBetweenInOutAndName: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenInoutKeywordAndFirstName
    }
    set {
      unexpectedBetweenInoutKeywordAndFirstName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "firstName")
  public var name: TokenSyntax? {
    get {
      return firstName
    }
    set {
      firstName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenFirstNameAndSecondName")
  public var unexpectedBetweenNameAndSecondName: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenFirstNameAndSecondName
    }
    set {
      unexpectedBetweenFirstNameAndSecondName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "TupleTypeElementSyntax(leadingTrivia:_:inoutKeyword:_:firstName:_:secondName:_:colon:_:type:_:ellipsis:_:trailingComma:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeInOut: UnexpectedNodesSyntax? = nil,
      inOut: TokenSyntax? = nil,
      _ unexpectedBetweenInOutAndName: UnexpectedNodesSyntax? = nil,
      name: TokenSyntax? = nil,
      _ unexpectedBetweenNameAndSecondName: UnexpectedNodesSyntax? = nil,
      secondName: TokenSyntax? = nil,
      _ unexpectedBetweenSecondNameAndColon: UnexpectedNodesSyntax? = nil,
      colon: TokenSyntax? = nil,
      _ unexpectedBetweenColonAndType: UnexpectedNodesSyntax? = nil,
      type: some TypeSyntaxProtocol,
      _ unexpectedBetweenTypeAndEllipsis: UnexpectedNodesSyntax? = nil,
      ellipsis: TokenSyntax? = nil,
      _ unexpectedBetweenEllipsisAndTrailingComma: UnexpectedNodesSyntax? = nil,
      trailingComma: TokenSyntax? = nil,
      _ unexpectedAfterTrailingComma: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeInOut, 
        inoutKeyword: inOut, 
        unexpectedBetweenInOutAndName, 
        firstName: name, 
        unexpectedBetweenNameAndSecondName, 
        secondName: secondName, 
        unexpectedBetweenSecondNameAndColon, 
        colon: colon, 
        unexpectedBetweenColonAndType, 
        type: type, 
        unexpectedBetweenTypeAndEllipsis, 
        ellipsis: ellipsis, 
        unexpectedBetweenEllipsisAndTrailingComma, 
        trailingComma: trailingComma, 
        unexpectedAfterTrailingComma, 
        trailingTrivia: trailingTrivia
      )
  }
}
