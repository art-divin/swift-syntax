//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension InheritedTypeSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeType")
  public var unexpectedBeforeTypeName: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeType
    }
    set {
      unexpectedBeforeType = newValue
    }
  }
  
  @available(*, deprecated, renamed: "type")
  public var typeName: TypeSyntax {
    get {
      return type
    }
    set {
      type = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenTypeAndTrailingComma")
  public var unexpectedBetweenTypeNameAndTrailingComma: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenTypeAndTrailingComma
    }
    set {
      unexpectedBetweenTypeAndTrailingComma = newValue
    }
  }
  
  @available(*, deprecated, renamed: "InheritedTypeSyntax(leadingTrivia:_:type:_:trailingComma:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeTypeName: UnexpectedNodesSyntax? = nil,
      typeName: some TypeSyntaxProtocol,
      _ unexpectedBetweenTypeNameAndTrailingComma: UnexpectedNodesSyntax? = nil,
      trailingComma: TokenSyntax? = nil,
      _ unexpectedAfterTrailingComma: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeTypeName, 
        type: typeName, 
        unexpectedBetweenTypeNameAndTrailingComma, 
        trailingComma: trailingComma, 
        unexpectedAfterTrailingComma, 
        trailingTrivia: trailingTrivia
      )
  }
}
