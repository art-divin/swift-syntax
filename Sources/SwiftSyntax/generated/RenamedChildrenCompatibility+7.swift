//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension AssociatedTypeDeclSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenAssociatedtypeKeywordAndName")
  public var unexpectedBetweenAssociatedtypeKeywordAndIdentifier: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenAssociatedtypeKeywordAndName
    }
    set {
      unexpectedBetweenAssociatedtypeKeywordAndName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "name")
  public var identifier: TokenSyntax {
    get {
      return name
    }
    set {
      name = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenNameAndInheritanceClause")
  public var unexpectedBetweenIdentifierAndInheritanceClause: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenNameAndInheritanceClause
    }
    set {
      unexpectedBetweenNameAndInheritanceClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "AssociatedTypeDeclSyntax(leadingTrivia:_:attributes:_:modifiers:_:associatedtypeKeyword:_:name:_:inheritanceClause:_:initializer:_:genericWhereClause:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeAttributes: UnexpectedNodesSyntax? = nil,
      attributes: AttributeListSyntax = [],
      _ unexpectedBetweenAttributesAndModifiers: UnexpectedNodesSyntax? = nil,
      modifiers: DeclModifierListSyntax = [],
      _ unexpectedBetweenModifiersAndAssociatedtypeKeyword: UnexpectedNodesSyntax? = nil,
      associatedtypeKeyword: TokenSyntax = .keyword(.associatedtype),
      _ unexpectedBetweenAssociatedtypeKeywordAndIdentifier: UnexpectedNodesSyntax? = nil,
      identifier: TokenSyntax,
      _ unexpectedBetweenIdentifierAndInheritanceClause: UnexpectedNodesSyntax? = nil,
      inheritanceClause: InheritanceClauseSyntax? = nil,
      _ unexpectedBetweenInheritanceClauseAndInitializer: UnexpectedNodesSyntax? = nil,
      initializer: TypeInitializerClauseSyntax? = nil,
      _ unexpectedBetweenInitializerAndGenericWhereClause: UnexpectedNodesSyntax? = nil,
      genericWhereClause: GenericWhereClauseSyntax? = nil,
      _ unexpectedAfterGenericWhereClause: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeAttributes, 
        attributes: attributes, 
        unexpectedBetweenAttributesAndModifiers, 
        modifiers: modifiers, 
        unexpectedBetweenModifiersAndAssociatedtypeKeyword, 
        associatedtypeKeyword: associatedtypeKeyword, 
        unexpectedBetweenAssociatedtypeKeywordAndIdentifier, 
        name: identifier, 
        unexpectedBetweenIdentifierAndInheritanceClause, 
        inheritanceClause: inheritanceClause, 
        unexpectedBetweenInheritanceClauseAndInitializer, 
        initializer: initializer, 
        unexpectedBetweenInitializerAndGenericWhereClause, 
        genericWhereClause: genericWhereClause, 
        unexpectedAfterGenericWhereClause, 
        trailingTrivia: trailingTrivia
      )
  }
}
