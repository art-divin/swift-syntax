//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension BooleanLiteralExprSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeLiteral")
  public var unexpectedBeforeBooleanLiteral: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeLiteral
    }
    set {
      unexpectedBeforeLiteral = newValue
    }
  }
  
  @available(*, deprecated, renamed: "literal")
  public var booleanLiteral: TokenSyntax {
    get {
      return literal
    }
    set {
      literal = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterLiteral")
  public var unexpectedAfterBooleanLiteral: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterLiteral
    }
    set {
      unexpectedAfterLiteral = newValue
    }
  }
  
  @available(*, deprecated, renamed: "BooleanLiteralExprSyntax(leadingTrivia:_:literal:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeBooleanLiteral: UnexpectedNodesSyntax? = nil,
      booleanLiteral: TokenSyntax,
      _ unexpectedAfterBooleanLiteral: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeBooleanLiteral, 
        literal: booleanLiteral, 
        unexpectedAfterBooleanLiteral, 
        trailingTrivia: trailingTrivia
      )
  }
}
