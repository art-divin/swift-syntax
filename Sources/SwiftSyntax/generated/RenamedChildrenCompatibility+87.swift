//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension ReturnClauseSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenArrowAndType")
  public var unexpectedBetweenArrowAndReturnType: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenArrowAndType
    }
    set {
      unexpectedBetweenArrowAndType = newValue
    }
  }
  
  @available(*, deprecated, renamed: "type")
  public var returnType: TypeSyntax {
    get {
      return type
    }
    set {
      type = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterType")
  public var unexpectedAfterReturnType: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterType
    }
    set {
      unexpectedAfterType = newValue
    }
  }
  
  @available(*, deprecated, renamed: "ReturnClauseSyntax(leadingTrivia:_:arrow:_:type:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeArrow: UnexpectedNodesSyntax? = nil,
      arrow: TokenSyntax = .arrowToken(),
      _ unexpectedBetweenArrowAndReturnType: UnexpectedNodesSyntax? = nil,
      returnType: some TypeSyntaxProtocol,
      _ unexpectedAfterReturnType: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeArrow, 
        arrow: arrow, 
        unexpectedBetweenArrowAndReturnType, 
        type: returnType, 
        unexpectedAfterReturnType, 
        trailingTrivia: trailingTrivia
      )
  }
}
