//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension EnumCaseElementSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeName")
  public var unexpectedBeforeIdentifier: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeName
    }
    set {
      unexpectedBeforeName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "name")
  public var identifier: TokenSyntax {
    get {
      return name
    }
    set {
      name = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenNameAndParameterClause")
  public var unexpectedBetweenIdentifierAndAssociatedValue: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenNameAndParameterClause
    }
    set {
      unexpectedBetweenNameAndParameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "parameterClause")
  public var associatedValue: EnumCaseParameterClauseSyntax? {
    get {
      return parameterClause
    }
    set {
      parameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenParameterClauseAndRawValue")
  public var unexpectedBetweenAssociatedValueAndRawValue: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenParameterClauseAndRawValue
    }
    set {
      unexpectedBetweenParameterClauseAndRawValue = newValue
    }
  }
  
  @available(*, deprecated, renamed: "EnumCaseElementSyntax(leadingTrivia:_:name:_:parameterClause:_:rawValue:_:trailingComma:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeIdentifier: UnexpectedNodesSyntax? = nil,
      identifier: TokenSyntax,
      _ unexpectedBetweenIdentifierAndAssociatedValue: UnexpectedNodesSyntax? = nil,
      associatedValue: EnumCaseParameterClauseSyntax? = nil,
      _ unexpectedBetweenAssociatedValueAndRawValue: UnexpectedNodesSyntax? = nil,
      rawValue: InitializerClauseSyntax? = nil,
      _ unexpectedBetweenRawValueAndTrailingComma: UnexpectedNodesSyntax? = nil,
      trailingComma: TokenSyntax? = nil,
      _ unexpectedAfterTrailingComma: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeIdentifier, 
        name: identifier, 
        unexpectedBetweenIdentifierAndAssociatedValue, 
        parameterClause: associatedValue, 
        unexpectedBetweenAssociatedValueAndRawValue, 
        rawValue: rawValue, 
        unexpectedBetweenRawValueAndTrailingComma, 
        trailingComma: trailingComma, 
        unexpectedAfterTrailingComma, 
        trailingTrivia: trailingTrivia
      )
  }
}
