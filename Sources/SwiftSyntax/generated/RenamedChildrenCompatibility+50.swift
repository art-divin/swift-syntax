//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension GenericWhereClauseSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenWhereKeywordAndRequirements")
  public var unexpectedBetweenWhereKeywordAndRequirementList: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenWhereKeywordAndRequirements
    }
    set {
      unexpectedBetweenWhereKeywordAndRequirements = newValue
    }
  }
  
  @available(*, deprecated, renamed: "requirements")
  public var requirementList: GenericRequirementListSyntax {
    get {
      return requirements
    }
    set {
      requirements = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterRequirements")
  public var unexpectedAfterRequirementList: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterRequirements
    }
    set {
      unexpectedAfterRequirements = newValue
    }
  }
  
  @available(*, deprecated, renamed: "GenericWhereClauseSyntax(leadingTrivia:_:whereKeyword:_:requirements:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeWhereKeyword: UnexpectedNodesSyntax? = nil,
      whereKeyword: TokenSyntax = .keyword(.where),
      _ unexpectedBetweenWhereKeywordAndRequirementList: UnexpectedNodesSyntax? = nil,
      requirementList: GenericRequirementListSyntax,
      _ unexpectedAfterRequirementList: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeWhereKeyword, 
        whereKeyword: whereKeyword, 
        unexpectedBetweenWhereKeywordAndRequirementList, 
        requirements: requirementList, 
        unexpectedAfterRequirementList, 
        trailingTrivia: trailingTrivia
      )
  }
}
