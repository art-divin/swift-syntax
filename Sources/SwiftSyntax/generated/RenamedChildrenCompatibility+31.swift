//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension EditorPlaceholderExprSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforePlaceholder")
  public var unexpectedBeforeIdentifier: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforePlaceholder
    }
    set {
      unexpectedBeforePlaceholder = newValue
    }
  }
  
  @available(*, deprecated, renamed: "placeholder")
  public var identifier: TokenSyntax {
    get {
      return placeholder
    }
    set {
      placeholder = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterPlaceholder")
  public var unexpectedAfterIdentifier: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterPlaceholder
    }
    set {
      unexpectedAfterPlaceholder = newValue
    }
  }
  
  @available(*, deprecated, renamed: "EditorPlaceholderExprSyntax(leadingTrivia:_:placeholder:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeIdentifier: UnexpectedNodesSyntax? = nil,
      identifier: TokenSyntax,
      _ unexpectedAfterIdentifier: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeIdentifier, 
        placeholder: identifier, 
        unexpectedAfterIdentifier, 
        trailingTrivia: trailingTrivia
      )
  }
}
