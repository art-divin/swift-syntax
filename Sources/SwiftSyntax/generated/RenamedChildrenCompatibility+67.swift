//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension NamedOpaqueReturnTypeSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeGenericParameterClause")
  public var unexpectedBeforeGenericParameters: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeGenericParameterClause
    }
    set {
      unexpectedBeforeGenericParameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "genericParameterClause")
  public var genericParameters: GenericParameterClauseSyntax {
    get {
      return genericParameterClause
    }
    set {
      genericParameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenGenericParameterClauseAndType")
  public var unexpectedBetweenGenericParametersAndBaseType: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenGenericParameterClauseAndType
    }
    set {
      unexpectedBetweenGenericParameterClauseAndType = newValue
    }
  }
  
  @available(*, deprecated, renamed: "type")
  public var baseType: TypeSyntax {
    get {
      return type
    }
    set {
      type = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterType")
  public var unexpectedAfterBaseType: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterType
    }
    set {
      unexpectedAfterType = newValue
    }
  }
  
  @available(*, deprecated, renamed: "NamedOpaqueReturnTypeSyntax(leadingTrivia:_:genericParameterClause:_:type:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeGenericParameters: UnexpectedNodesSyntax? = nil,
      genericParameters: GenericParameterClauseSyntax,
      _ unexpectedBetweenGenericParametersAndBaseType: UnexpectedNodesSyntax? = nil,
      baseType: some TypeSyntaxProtocol,
      _ unexpectedAfterBaseType: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeGenericParameters, 
        genericParameterClause: genericParameters, 
        unexpectedBetweenGenericParametersAndBaseType, 
        type: baseType, 
        unexpectedAfterBaseType, 
        trailingTrivia: trailingTrivia
      )
  }
}
