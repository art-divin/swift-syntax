//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension PrecedenceGroupRelationSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeHigherThanOrLowerThanLabel")
  public var unexpectedBeforeHigherThanOrLowerThan: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeHigherThanOrLowerThanLabel
    }
    set {
      unexpectedBeforeHigherThanOrLowerThanLabel = newValue
    }
  }
  
  @available(*, deprecated, renamed: "higherThanOrLowerThanLabel")
  public var higherThanOrLowerThan: TokenSyntax {
    get {
      return higherThanOrLowerThanLabel
    }
    set {
      higherThanOrLowerThanLabel = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenHigherThanOrLowerThanLabelAndColon")
  public var unexpectedBetweenHigherThanOrLowerThanAndColon: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenHigherThanOrLowerThanLabelAndColon
    }
    set {
      unexpectedBetweenHigherThanOrLowerThanLabelAndColon = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenColonAndPrecedenceGroups")
  public var unexpectedBetweenColonAndOtherNames: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenColonAndPrecedenceGroups
    }
    set {
      unexpectedBetweenColonAndPrecedenceGroups = newValue
    }
  }
  
  @available(*, deprecated, renamed: "precedenceGroups")
  public var otherNames: PrecedenceGroupNameListSyntax {
    get {
      return precedenceGroups
    }
    set {
      precedenceGroups = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterPrecedenceGroups")
  public var unexpectedAfterOtherNames: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterPrecedenceGroups
    }
    set {
      unexpectedAfterPrecedenceGroups = newValue
    }
  }
  
  @available(*, deprecated, renamed: "PrecedenceGroupRelationSyntax(leadingTrivia:_:higherThanOrLowerThanLabel:_:colon:_:precedenceGroups:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeHigherThanOrLowerThan: UnexpectedNodesSyntax? = nil,
      higherThanOrLowerThan: TokenSyntax,
      _ unexpectedBetweenHigherThanOrLowerThanAndColon: UnexpectedNodesSyntax? = nil,
      colon: TokenSyntax = .colonToken(),
      _ unexpectedBetweenColonAndOtherNames: UnexpectedNodesSyntax? = nil,
      otherNames: PrecedenceGroupNameListSyntax,
      _ unexpectedAfterOtherNames: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeHigherThanOrLowerThan, 
        higherThanOrLowerThanLabel: higherThanOrLowerThan, 
        unexpectedBetweenHigherThanOrLowerThanAndColon, 
        colon: colon, 
        unexpectedBetweenColonAndOtherNames, 
        precedenceGroups: otherNames, 
        unexpectedAfterOtherNames, 
        trailingTrivia: trailingTrivia
      )
  }
}
