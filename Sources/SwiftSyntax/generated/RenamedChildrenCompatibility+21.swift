//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension DeclReferenceExprSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeBaseName")
  public var unexpectedBeforeIdentifier: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeBaseName
    }
    set {
      unexpectedBeforeBaseName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "baseName")
  public var identifier: TokenSyntax {
    get {
      return baseName
    }
    set {
      baseName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenBaseNameAndArgumentNames")
  public var unexpectedBetweenIdentifierAndDeclNameArguments: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenBaseNameAndArgumentNames
    }
    set {
      unexpectedBetweenBaseNameAndArgumentNames = newValue
    }
  }
  
  @available(*, deprecated, renamed: "argumentNames")
  public var declNameArguments: DeclNameArgumentsSyntax? {
    get {
      return argumentNames
    }
    set {
      argumentNames = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterArgumentNames")
  public var unexpectedAfterDeclNameArguments: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterArgumentNames
    }
    set {
      unexpectedAfterArgumentNames = newValue
    }
  }
  
  @available(*, deprecated, renamed: "DeclReferenceExprSyntax(leadingTrivia:_:baseName:_:argumentNames:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeIdentifier: UnexpectedNodesSyntax? = nil,
      identifier: TokenSyntax,
      _ unexpectedBetweenIdentifierAndDeclNameArguments: UnexpectedNodesSyntax? = nil,
      declNameArguments: DeclNameArgumentsSyntax? = nil,
      _ unexpectedAfterDeclNameArguments: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeIdentifier, 
        baseName: identifier, 
        unexpectedBetweenIdentifierAndDeclNameArguments, 
        argumentNames: declNameArguments, 
        unexpectedAfterDeclNameArguments, 
        trailingTrivia: trailingTrivia
      )
  }
}
