//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension SubscriptDeclSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenGenericParameterClauseAndParameterClause")
  public var unexpectedBetweenGenericParameterClauseAndIndices: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenGenericParameterClauseAndParameterClause
    }
    set {
      unexpectedBetweenGenericParameterClauseAndParameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "parameterClause")
  public var indices: FunctionParameterClauseSyntax {
    get {
      return parameterClause
    }
    set {
      parameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenParameterClauseAndReturnClause")
  public var unexpectedBetweenIndicesAndResult: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenParameterClauseAndReturnClause
    }
    set {
      unexpectedBetweenParameterClauseAndReturnClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "returnClause")
  public var result: ReturnClauseSyntax {
    get {
      return returnClause
    }
    set {
      returnClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenReturnClauseAndGenericWhereClause")
  public var unexpectedBetweenResultAndGenericWhereClause: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenReturnClauseAndGenericWhereClause
    }
    set {
      unexpectedBetweenReturnClauseAndGenericWhereClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenGenericWhereClauseAndAccessorBlock")
  public var unexpectedBetweenGenericWhereClauseAndAccessor: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenGenericWhereClauseAndAccessorBlock
    }
    set {
      unexpectedBetweenGenericWhereClauseAndAccessorBlock = newValue
    }
  }
  
  @available(*, deprecated, renamed: "accessorBlock")
  public var accessor: AccessorBlockSyntax? {
    get {
      return accessorBlock
    }
    set {
      accessorBlock = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterAccessorBlock")
  public var unexpectedAfterAccessor: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterAccessorBlock
    }
    set {
      unexpectedAfterAccessorBlock = newValue
    }
  }
  
  @available(*, deprecated, renamed: "SubscriptDeclSyntax(leadingTrivia:_:attributes:_:modifiers:_:subscriptKeyword:_:genericParameterClause:_:parameterClause:_:returnClause:_:genericWhereClause:_:accessorBlock:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeAttributes: UnexpectedNodesSyntax? = nil,
      attributes: AttributeListSyntax = [],
      _ unexpectedBetweenAttributesAndModifiers: UnexpectedNodesSyntax? = nil,
      modifiers: DeclModifierListSyntax = [],
      _ unexpectedBetweenModifiersAndSubscriptKeyword: UnexpectedNodesSyntax? = nil,
      subscriptKeyword: TokenSyntax = .keyword(.subscript),
      _ unexpectedBetweenSubscriptKeywordAndGenericParameterClause: UnexpectedNodesSyntax? = nil,
      genericParameterClause: GenericParameterClauseSyntax? = nil,
      _ unexpectedBetweenGenericParameterClauseAndIndices: UnexpectedNodesSyntax? = nil,
      indices: FunctionParameterClauseSyntax,
      _ unexpectedBetweenIndicesAndResult: UnexpectedNodesSyntax? = nil,
      result: ReturnClauseSyntax,
      _ unexpectedBetweenResultAndGenericWhereClause: UnexpectedNodesSyntax? = nil,
      genericWhereClause: GenericWhereClauseSyntax? = nil,
      _ unexpectedBetweenGenericWhereClauseAndAccessor: UnexpectedNodesSyntax? = nil,
      accessor: AccessorBlockSyntax? = nil,
      _ unexpectedAfterAccessor: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeAttributes, 
        attributes: attributes, 
        unexpectedBetweenAttributesAndModifiers, 
        modifiers: modifiers, 
        unexpectedBetweenModifiersAndSubscriptKeyword, 
        subscriptKeyword: subscriptKeyword, 
        unexpectedBetweenSubscriptKeywordAndGenericParameterClause, 
        genericParameterClause: genericParameterClause, 
        unexpectedBetweenGenericParameterClauseAndIndices, 
        parameterClause: indices, 
        unexpectedBetweenIndicesAndResult, 
        returnClause: result, 
        unexpectedBetweenResultAndGenericWhereClause, 
        genericWhereClause: genericWhereClause, 
        unexpectedBetweenGenericWhereClauseAndAccessor, 
        accessorBlock: accessor, 
        unexpectedAfterAccessor, 
        trailingTrivia: trailingTrivia
      )
  }
}
