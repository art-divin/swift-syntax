//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension ImportDeclSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenModifiersAndImportKeyword")
  public var unexpectedBetweenModifiersAndImportTok: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenModifiersAndImportKeyword
    }
    set {
      unexpectedBetweenModifiersAndImportKeyword = newValue
    }
  }
  
  @available(*, deprecated, renamed: "importKeyword")
  public var importTok: TokenSyntax {
    get {
      return importKeyword
    }
    set {
      importKeyword = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenImportKeywordAndImportKindSpecifier")
  public var unexpectedBetweenImportTokAndImportKind: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenImportKeywordAndImportKindSpecifier
    }
    set {
      unexpectedBetweenImportKeywordAndImportKindSpecifier = newValue
    }
  }
  
  @available(*, deprecated, renamed: "importKindSpecifier")
  public var importKind: TokenSyntax? {
    get {
      return importKindSpecifier
    }
    set {
      importKindSpecifier = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenImportKindSpecifierAndPath")
  public var unexpectedBetweenImportKindAndPath: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenImportKindSpecifierAndPath
    }
    set {
      unexpectedBetweenImportKindSpecifierAndPath = newValue
    }
  }
  
  @available(*, deprecated, renamed: "ImportDeclSyntax(leadingTrivia:_:attributes:_:modifiers:_:importKeyword:_:importKindSpecifier:_:path:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeAttributes: UnexpectedNodesSyntax? = nil,
      attributes: AttributeListSyntax = [],
      _ unexpectedBetweenAttributesAndModifiers: UnexpectedNodesSyntax? = nil,
      modifiers: DeclModifierListSyntax = [],
      _ unexpectedBetweenModifiersAndImportTok: UnexpectedNodesSyntax? = nil,
      importTok: TokenSyntax = .keyword(.import),
      _ unexpectedBetweenImportTokAndImportKind: UnexpectedNodesSyntax? = nil,
      importKind: TokenSyntax? = nil,
      _ unexpectedBetweenImportKindAndPath: UnexpectedNodesSyntax? = nil,
      path: ImportPathComponentListSyntax,
      _ unexpectedAfterPath: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeAttributes, 
        attributes: attributes, 
        unexpectedBetweenAttributesAndModifiers, 
        modifiers: modifiers, 
        unexpectedBetweenModifiersAndImportTok, 
        importKeyword: importTok, 
        unexpectedBetweenImportTokAndImportKind, 
        importKindSpecifier: importKind, 
        unexpectedBetweenImportKindAndPath, 
        path: path, 
        unexpectedAfterPath, 
        trailingTrivia: trailingTrivia
      )
  }
}
