//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension FunctionSignatureSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeParameterClause")
  public var unexpectedBeforeInput: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeParameterClause
    }
    set {
      unexpectedBeforeParameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "parameterClause")
  public var input: FunctionParameterClauseSyntax {
    get {
      return parameterClause
    }
    set {
      parameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenParameterClauseAndEffectSpecifiers")
  public var unexpectedBetweenInputAndEffectSpecifiers: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenParameterClauseAndEffectSpecifiers
    }
    set {
      unexpectedBetweenParameterClauseAndEffectSpecifiers = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenEffectSpecifiersAndReturnClause")
  public var unexpectedBetweenEffectSpecifiersAndOutput: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenEffectSpecifiersAndReturnClause
    }
    set {
      unexpectedBetweenEffectSpecifiersAndReturnClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "returnClause")
  public var output: ReturnClauseSyntax? {
    get {
      return returnClause
    }
    set {
      returnClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterReturnClause")
  public var unexpectedAfterOutput: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterReturnClause
    }
    set {
      unexpectedAfterReturnClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "FunctionSignatureSyntax(leadingTrivia:_:parameterClause:_:effectSpecifiers:_:returnClause:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeInput: UnexpectedNodesSyntax? = nil,
      input: FunctionParameterClauseSyntax,
      _ unexpectedBetweenInputAndEffectSpecifiers: UnexpectedNodesSyntax? = nil,
      effectSpecifiers: FunctionEffectSpecifiersSyntax? = nil,
      _ unexpectedBetweenEffectSpecifiersAndOutput: UnexpectedNodesSyntax? = nil,
      output: ReturnClauseSyntax? = nil,
      _ unexpectedAfterOutput: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeInput, 
        parameterClause: input, 
        unexpectedBetweenInputAndEffectSpecifiers, 
        effectSpecifiers: effectSpecifiers, 
        unexpectedBetweenEffectSpecifiersAndOutput, 
        returnClause: output, 
        unexpectedAfterOutput, 
        trailingTrivia: trailingTrivia
      )
  }
}
