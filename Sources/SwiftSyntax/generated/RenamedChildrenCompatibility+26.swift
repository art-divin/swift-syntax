//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension DifferentiabilityArgumentsSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenLeftParenAndArguments")
  public var unexpectedBetweenLeftParenAndDifferentiabilityParameters: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenLeftParenAndArguments
    }
    set {
      unexpectedBetweenLeftParenAndArguments = newValue
    }
  }
  
  @available(*, deprecated, renamed: "arguments")
  public var differentiabilityParameters: DifferentiabilityArgumentListSyntax {
    get {
      return arguments
    }
    set {
      arguments = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenArgumentsAndRightParen")
  public var unexpectedBetweenDifferentiabilityParametersAndRightParen: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenArgumentsAndRightParen
    }
    set {
      unexpectedBetweenArgumentsAndRightParen = newValue
    }
  }
  
  @available(*, deprecated, renamed: "DifferentiabilityArgumentsSyntax(leadingTrivia:_:leftParen:_:arguments:_:rightParen:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeLeftParen: UnexpectedNodesSyntax? = nil,
      leftParen: TokenSyntax = .leftParenToken(),
      _ unexpectedBetweenLeftParenAndDifferentiabilityParameters: UnexpectedNodesSyntax? = nil,
      differentiabilityParameters: DifferentiabilityArgumentListSyntax,
      _ unexpectedBetweenDifferentiabilityParametersAndRightParen: UnexpectedNodesSyntax? = nil,
      rightParen: TokenSyntax = .rightParenToken(),
      _ unexpectedAfterRightParen: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeLeftParen, 
        leftParen: leftParen, 
        unexpectedBetweenLeftParenAndDifferentiabilityParameters, 
        arguments: differentiabilityParameters, 
        unexpectedBetweenDifferentiabilityParametersAndRightParen, 
        rightParen: rightParen, 
        unexpectedAfterRightParen, 
        trailingTrivia: trailingTrivia
      )
  }
}
