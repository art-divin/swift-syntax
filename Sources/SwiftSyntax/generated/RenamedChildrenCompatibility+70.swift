//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension PackElementExprSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenEachKeywordAndPack")
  public var unexpectedBetweenEachKeywordAndPackRefExpr: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenEachKeywordAndPack
    }
    set {
      unexpectedBetweenEachKeywordAndPack = newValue
    }
  }
  
  @available(*, deprecated, renamed: "pack")
  public var packRefExpr: ExprSyntax {
    get {
      return pack
    }
    set {
      pack = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterPack")
  public var unexpectedAfterPackRefExpr: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterPack
    }
    set {
      unexpectedAfterPack = newValue
    }
  }
  
  @available(*, deprecated, renamed: "PackElementExprSyntax(leadingTrivia:_:eachKeyword:_:pack:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeEachKeyword: UnexpectedNodesSyntax? = nil,
      eachKeyword: TokenSyntax = .keyword(.each),
      _ unexpectedBetweenEachKeywordAndPackRefExpr: UnexpectedNodesSyntax? = nil,
      packRefExpr: some ExprSyntaxProtocol,
      _ unexpectedAfterPackRefExpr: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeEachKeyword, 
        eachKeyword: eachKeyword, 
        unexpectedBetweenEachKeywordAndPackRefExpr, 
        pack: packRefExpr, 
        unexpectedAfterPackRefExpr, 
        trailingTrivia: trailingTrivia
      )
  }
}
