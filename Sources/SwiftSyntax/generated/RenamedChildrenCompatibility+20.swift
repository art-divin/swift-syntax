//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension ConsumeExprSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeConsumeKeyword")
  public var unexpectedBeforeMoveKeyword: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeConsumeKeyword
    }
    set {
      unexpectedBeforeConsumeKeyword = newValue
    }
  }
  
  @available(*, deprecated, renamed: "consumeKeyword")
  public var moveKeyword: TokenSyntax {
    get {
      return consumeKeyword
    }
    set {
      consumeKeyword = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenConsumeKeywordAndExpression")
  public var unexpectedBetweenMoveKeywordAndExpression: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenConsumeKeywordAndExpression
    }
    set {
      unexpectedBetweenConsumeKeywordAndExpression = newValue
    }
  }
  
  @available(*, deprecated, renamed: "ConsumeExprSyntax(leadingTrivia:_:consumeKeyword:_:expression:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeMoveKeyword: UnexpectedNodesSyntax? = nil,
      moveKeyword: TokenSyntax,
      _ unexpectedBetweenMoveKeywordAndExpression: UnexpectedNodesSyntax? = nil,
      expression: some ExprSyntaxProtocol,
      _ unexpectedAfterExpression: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeMoveKeyword, 
        consumeKeyword: moveKeyword, 
        unexpectedBetweenMoveKeywordAndExpression, 
        expression: expression, 
        unexpectedAfterExpression, 
        trailingTrivia: trailingTrivia
      )
  }
}
