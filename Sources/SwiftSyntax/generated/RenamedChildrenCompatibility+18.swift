//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension ClosureSignatureSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenCaptureAndParameterClause")
  public var unexpectedBetweenCaptureAndInput: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenCaptureAndParameterClause
    }
    set {
      unexpectedBetweenCaptureAndParameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "parameterClause")
  public var input: ParameterClause? {
    get {
      return parameterClause
    }
    set {
      parameterClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenParameterClauseAndEffectSpecifiers")
  public var unexpectedBetweenInputAndEffectSpecifiers: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenParameterClauseAndEffectSpecifiers
    }
    set {
      unexpectedBetweenParameterClauseAndEffectSpecifiers = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenEffectSpecifiersAndReturnClause")
  public var unexpectedBetweenEffectSpecifiersAndOutput: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenEffectSpecifiersAndReturnClause
    }
    set {
      unexpectedBetweenEffectSpecifiersAndReturnClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "returnClause")
  public var output: ReturnClauseSyntax? {
    get {
      return returnClause
    }
    set {
      returnClause = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenReturnClauseAndInKeyword")
  public var unexpectedBetweenOutputAndInTok: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenReturnClauseAndInKeyword
    }
    set {
      unexpectedBetweenReturnClauseAndInKeyword = newValue
    }
  }
  
  @available(*, deprecated, renamed: "inKeyword")
  public var inTok: TokenSyntax {
    get {
      return inKeyword
    }
    set {
      inKeyword = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterInKeyword")
  public var unexpectedAfterInTok: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterInKeyword
    }
    set {
      unexpectedAfterInKeyword = newValue
    }
  }
  
  @available(*, deprecated, renamed: "ClosureSignatureSyntax(leadingTrivia:_:attributes:_:capture:_:parameterClause:_:effectSpecifiers:_:returnClause:_:inKeyword:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeAttributes: UnexpectedNodesSyntax? = nil,
      attributes: AttributeListSyntax = [],
      _ unexpectedBetweenAttributesAndCapture: UnexpectedNodesSyntax? = nil,
      capture: ClosureCaptureClauseSyntax? = nil,
      _ unexpectedBetweenCaptureAndInput: UnexpectedNodesSyntax? = nil,
      input: ParameterClause? = nil,
      _ unexpectedBetweenInputAndEffectSpecifiers: UnexpectedNodesSyntax? = nil,
      effectSpecifiers: TypeEffectSpecifiersSyntax? = nil,
      _ unexpectedBetweenEffectSpecifiersAndOutput: UnexpectedNodesSyntax? = nil,
      output: ReturnClauseSyntax? = nil,
      _ unexpectedBetweenOutputAndInTok: UnexpectedNodesSyntax? = nil,
      inTok: TokenSyntax = .keyword(.in),
      _ unexpectedAfterInTok: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeAttributes, 
        attributes: attributes, 
        unexpectedBetweenAttributesAndCapture, 
        capture: capture, 
        unexpectedBetweenCaptureAndInput, 
        parameterClause: input, 
        unexpectedBetweenInputAndEffectSpecifiers, 
        effectSpecifiers: effectSpecifiers, 
        unexpectedBetweenEffectSpecifiersAndOutput, 
        returnClause: output, 
        unexpectedBetweenOutputAndInTok, 
        inKeyword: inTok, 
        unexpectedAfterInTok, 
        trailingTrivia: trailingTrivia
      )
  }
}
