//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension ImplementsAttributeArgumentsSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenCommaAndDeclName")
  public var unexpectedBetweenCommaAndDeclname: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenCommaAndDeclName
    }
    set {
      unexpectedBetweenCommaAndDeclName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "declName")
  public var declname: DeclReferenceExprSyntax {
    get {
      return declName
    }
    set {
      declName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterDeclName")
  public var unexpectedAfterDeclname: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterDeclName
    }
    set {
      unexpectedAfterDeclName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "ImplementsAttributeArgumentsSyntax(leadingTrivia:_:type:_:comma:_:declName:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeType: UnexpectedNodesSyntax? = nil,
      type: some TypeSyntaxProtocol,
      _ unexpectedBetweenTypeAndComma: UnexpectedNodesSyntax? = nil,
      comma: TokenSyntax = .commaToken(),
      _ unexpectedBetweenCommaAndDeclname: UnexpectedNodesSyntax? = nil,
      declname: DeclReferenceExprSyntax,
      _ unexpectedAfterDeclname: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeType, 
        type: type, 
        unexpectedBetweenTypeAndComma, 
        comma: comma, 
        unexpectedBetweenCommaAndDeclname, 
        declName: declname, 
        unexpectedAfterDeclname, 
        trailingTrivia: trailingTrivia
      )
  }
}
