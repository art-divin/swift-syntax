//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension AvailabilityConditionSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenLeftParenAndAvailabilityArguments")
  public var unexpectedBetweenLeftParenAndAvailabilitySpec: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenLeftParenAndAvailabilityArguments
    }
    set {
      unexpectedBetweenLeftParenAndAvailabilityArguments = newValue
    }
  }
  
  @available(*, deprecated, renamed: "availabilityArguments")
  public var availabilitySpec: AvailabilityArgumentListSyntax {
    get {
      return availabilityArguments
    }
    set {
      availabilityArguments = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenAvailabilityArgumentsAndRightParen")
  public var unexpectedBetweenAvailabilitySpecAndRightParen: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenAvailabilityArgumentsAndRightParen
    }
    set {
      unexpectedBetweenAvailabilityArgumentsAndRightParen = newValue
    }
  }
  
  @available(*, deprecated, renamed: "AvailabilityConditionSyntax(leadingTrivia:_:availabilityKeyword:_:leftParen:_:availabilityArguments:_:rightParen:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeAvailabilityKeyword: UnexpectedNodesSyntax? = nil,
      availabilityKeyword: TokenSyntax,
      _ unexpectedBetweenAvailabilityKeywordAndLeftParen: UnexpectedNodesSyntax? = nil,
      leftParen: TokenSyntax = .leftParenToken(),
      _ unexpectedBetweenLeftParenAndAvailabilitySpec: UnexpectedNodesSyntax? = nil,
      availabilitySpec: AvailabilityArgumentListSyntax,
      _ unexpectedBetweenAvailabilitySpecAndRightParen: UnexpectedNodesSyntax? = nil,
      rightParen: TokenSyntax = .rightParenToken(),
      _ unexpectedAfterRightParen: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeAvailabilityKeyword, 
        availabilityKeyword: availabilityKeyword, 
        unexpectedBetweenAvailabilityKeywordAndLeftParen, 
        leftParen: leftParen, 
        unexpectedBetweenLeftParenAndAvailabilitySpec, 
        availabilityArguments: availabilitySpec, 
        unexpectedBetweenAvailabilitySpecAndRightParen, 
        rightParen: rightParen, 
        unexpectedAfterRightParen, 
        trailingTrivia: trailingTrivia
      )
  }
}
