//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension MemberAccessExprSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenBaseAndPeriod")
  public var unexpectedBetweenBaseAndDot: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenBaseAndPeriod
    }
    set {
      unexpectedBetweenBaseAndPeriod = newValue
    }
  }
  
  @available(*, deprecated, renamed: "period")
  public var dot: TokenSyntax {
    get {
      return period
    }
    set {
      period = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenPeriodAndDeclName")
  public var unexpectedBetweenDotAndDeclName: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenPeriodAndDeclName
    }
    set {
      unexpectedBetweenPeriodAndDeclName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "MemberAccessExprSyntax(leadingTrivia:_:base:_:period:_:declName:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeBase: UnexpectedNodesSyntax? = nil,
      base: (some ExprSyntaxProtocol)? = ExprSyntax?.none,
      _ unexpectedBetweenBaseAndDot: UnexpectedNodesSyntax? = nil,
      dot: TokenSyntax = .periodToken(),
      _ unexpectedBetweenDotAndDeclName: UnexpectedNodesSyntax? = nil,
      declName: DeclReferenceExprSyntax,
      _ unexpectedAfterDeclName: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeBase, 
        base: base, 
        unexpectedBetweenBaseAndDot, 
        period: dot, 
        unexpectedBetweenDotAndDeclName, 
        declName: declName, 
        unexpectedAfterDeclName, 
        trailingTrivia: trailingTrivia
      )
  }
}
