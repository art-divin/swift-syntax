//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension PoundSourceLocationArgumentsSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeFileLabel")
  public var unexpectedBeforeFileArgLabel: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeFileLabel
    }
    set {
      unexpectedBeforeFileLabel = newValue
    }
  }
  
  @available(*, deprecated, renamed: "fileLabel")
  public var fileArgLabel: TokenSyntax {
    get {
      return fileLabel
    }
    set {
      fileLabel = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenFileLabelAndFileColon")
  public var unexpectedBetweenFileArgLabelAndFileArgColon: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenFileLabelAndFileColon
    }
    set {
      unexpectedBetweenFileLabelAndFileColon = newValue
    }
  }
  
  @available(*, deprecated, renamed: "fileColon")
  public var fileArgColon: TokenSyntax {
    get {
      return fileColon
    }
    set {
      fileColon = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenFileColonAndFileName")
  public var unexpectedBetweenFileArgColonAndFileName: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenFileColonAndFileName
    }
    set {
      unexpectedBetweenFileColonAndFileName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenCommaAndLineLabel")
  public var unexpectedBetweenCommaAndLineArgLabel: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenCommaAndLineLabel
    }
    set {
      unexpectedBetweenCommaAndLineLabel = newValue
    }
  }
  
  @available(*, deprecated, renamed: "lineLabel")
  public var lineArgLabel: TokenSyntax {
    get {
      return lineLabel
    }
    set {
      lineLabel = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenLineLabelAndLineColon")
  public var unexpectedBetweenLineArgLabelAndLineArgColon: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenLineLabelAndLineColon
    }
    set {
      unexpectedBetweenLineLabelAndLineColon = newValue
    }
  }
  
  @available(*, deprecated, renamed: "lineColon")
  public var lineArgColon: TokenSyntax {
    get {
      return lineColon
    }
    set {
      lineColon = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenLineColonAndLineNumber")
  public var unexpectedBetweenLineArgColonAndLineNumber: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenLineColonAndLineNumber
    }
    set {
      unexpectedBetweenLineColonAndLineNumber = newValue
    }
  }
  
  @available(*, deprecated, renamed: "PoundSourceLocationArgumentsSyntax(leadingTrivia:_:fileLabel:_:fileColon:_:fileName:_:comma:_:lineLabel:_:lineColon:_:lineNumber:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeFileArgLabel: UnexpectedNodesSyntax? = nil,
      fileArgLabel: TokenSyntax = .keyword(.file),
      _ unexpectedBetweenFileArgLabelAndFileArgColon: UnexpectedNodesSyntax? = nil,
      fileArgColon: TokenSyntax = .colonToken(),
      _ unexpectedBetweenFileArgColonAndFileName: UnexpectedNodesSyntax? = nil,
      fileName: SimpleStringLiteralExprSyntax,
      _ unexpectedBetweenFileNameAndComma: UnexpectedNodesSyntax? = nil,
      comma: TokenSyntax = .commaToken(),
      _ unexpectedBetweenCommaAndLineArgLabel: UnexpectedNodesSyntax? = nil,
      lineArgLabel: TokenSyntax = .keyword(.line),
      _ unexpectedBetweenLineArgLabelAndLineArgColon: UnexpectedNodesSyntax? = nil,
      lineArgColon: TokenSyntax = .colonToken(),
      _ unexpectedBetweenLineArgColonAndLineNumber: UnexpectedNodesSyntax? = nil,
      lineNumber: TokenSyntax,
      _ unexpectedAfterLineNumber: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeFileArgLabel, 
        fileLabel: fileArgLabel, 
        unexpectedBetweenFileArgLabelAndFileArgColon, 
        fileColon: fileArgColon, 
        unexpectedBetweenFileArgColonAndFileName, 
        fileName: fileName, 
        unexpectedBetweenFileNameAndComma, 
        comma: comma, 
        unexpectedBetweenCommaAndLineArgLabel, 
        lineLabel: lineArgLabel, 
        unexpectedBetweenLineArgLabelAndLineArgColon, 
        lineColon: lineArgColon, 
        unexpectedBetweenLineArgColonAndLineNumber, 
        lineNumber: lineNumber, 
        unexpectedAfterLineNumber, 
        trailingTrivia: trailingTrivia
      )
  }
}
