//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension AssignmentExprSyntax {
  @available(*, deprecated, renamed: "unexpectedBeforeEqual")
  public var unexpectedBeforeAssignToken: UnexpectedNodesSyntax? {
    get {
      return unexpectedBeforeEqual
    }
    set {
      unexpectedBeforeEqual = newValue
    }
  }
  
  @available(*, deprecated, renamed: "equal")
  public var assignToken: TokenSyntax {
    get {
      return equal
    }
    set {
      equal = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedAfterEqual")
  public var unexpectedAfterAssignToken: UnexpectedNodesSyntax? {
    get {
      return unexpectedAfterEqual
    }
    set {
      unexpectedAfterEqual = newValue
    }
  }
  
  @available(*, deprecated, renamed: "AssignmentExprSyntax(leadingTrivia:_:equal:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeAssignToken: UnexpectedNodesSyntax? = nil,
      assignToken: TokenSyntax = .equalToken(),
      _ unexpectedAfterAssignToken: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeAssignToken, 
        equal: assignToken, 
        unexpectedAfterAssignToken, 
        trailingTrivia: trailingTrivia
      )
  }
}
