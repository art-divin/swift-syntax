//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension InfixOperatorExprSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenLeftOperandAndOperator")
  public var unexpectedBetweenLeftOperandAndOperatorOperand: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenLeftOperandAndOperator
    }
    set {
      unexpectedBetweenLeftOperandAndOperator = newValue
    }
  }
  
  @available(*, deprecated, renamed: "operator")
  public var operatorOperand: ExprSyntax {
    get {
      return `operator`
    }
    set {
      `operator` = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenOperatorAndRightOperand")
  public var unexpectedBetweenOperatorOperandAndRightOperand: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenOperatorAndRightOperand
    }
    set {
      unexpectedBetweenOperatorAndRightOperand = newValue
    }
  }
  
  @available(*, deprecated, renamed: "InfixOperatorExprSyntax(leadingTrivia:_:leftOperand:_:operator:_:rightOperand:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeLeftOperand: UnexpectedNodesSyntax? = nil,
      leftOperand: some ExprSyntaxProtocol,
      _ unexpectedBetweenLeftOperandAndOperatorOperand: UnexpectedNodesSyntax? = nil,
      operatorOperand: some ExprSyntaxProtocol,
      _ unexpectedBetweenOperatorOperandAndRightOperand: UnexpectedNodesSyntax? = nil,
      rightOperand: some ExprSyntaxProtocol,
      _ unexpectedAfterRightOperand: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeLeftOperand, 
        leftOperand: leftOperand, 
        unexpectedBetweenLeftOperandAndOperatorOperand, 
        operator: operatorOperand, 
        unexpectedBetweenOperatorOperandAndRightOperand, 
        rightOperand: rightOperand, 
        unexpectedAfterRightOperand, 
        trailingTrivia: trailingTrivia
      )
  }
}
