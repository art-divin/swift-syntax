//// Automatically generated by generate-swift-syntax
//// Do not edit directly!
//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2014 - 2023 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

extension PrecedenceGroupDeclSyntax {
  @available(*, deprecated, renamed: "unexpectedBetweenPrecedencegroupKeywordAndName")
  public var unexpectedBetweenPrecedencegroupKeywordAndIdentifier: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenPrecedencegroupKeywordAndName
    }
    set {
      unexpectedBetweenPrecedencegroupKeywordAndName = newValue
    }
  }
  
  @available(*, deprecated, renamed: "name")
  public var identifier: TokenSyntax {
    get {
      return name
    }
    set {
      name = newValue
    }
  }
  
  @available(*, deprecated, renamed: "unexpectedBetweenNameAndLeftBrace")
  public var unexpectedBetweenIdentifierAndLeftBrace: UnexpectedNodesSyntax? {
    get {
      return unexpectedBetweenNameAndLeftBrace
    }
    set {
      unexpectedBetweenNameAndLeftBrace = newValue
    }
  }
  
  @available(*, deprecated, renamed: "PrecedenceGroupDeclSyntax(leadingTrivia:_:attributes:_:modifiers:_:precedencegroupKeyword:_:name:_:leftBrace:_:groupAttributes:_:rightBrace:_:trailingTrivia:)")
  @_disfavoredOverload
  public init(
      leadingTrivia: Trivia? = nil,
      _ unexpectedBeforeAttributes: UnexpectedNodesSyntax? = nil,
      attributes: AttributeListSyntax = [],
      _ unexpectedBetweenAttributesAndModifiers: UnexpectedNodesSyntax? = nil,
      modifiers: DeclModifierListSyntax = [],
      _ unexpectedBetweenModifiersAndPrecedencegroupKeyword: UnexpectedNodesSyntax? = nil,
      precedencegroupKeyword: TokenSyntax = .keyword(.precedencegroup),
      _ unexpectedBetweenPrecedencegroupKeywordAndIdentifier: UnexpectedNodesSyntax? = nil,
      identifier: TokenSyntax,
      _ unexpectedBetweenIdentifierAndLeftBrace: UnexpectedNodesSyntax? = nil,
      leftBrace: TokenSyntax = .leftBraceToken(),
      _ unexpectedBetweenLeftBraceAndGroupAttributes: UnexpectedNodesSyntax? = nil,
      groupAttributes: PrecedenceGroupAttributeListSyntax,
      _ unexpectedBetweenGroupAttributesAndRightBrace: UnexpectedNodesSyntax? = nil,
      rightBrace: TokenSyntax = .rightBraceToken(),
      _ unexpectedAfterRightBrace: UnexpectedNodesSyntax? = nil,
      trailingTrivia: Trivia? = nil
    
  ) {
    self.init(
        leadingTrivia: leadingTrivia, 
        unexpectedBeforeAttributes, 
        attributes: attributes, 
        unexpectedBetweenAttributesAndModifiers, 
        modifiers: modifiers, 
        unexpectedBetweenModifiersAndPrecedencegroupKeyword, 
        precedencegroupKeyword: precedencegroupKeyword, 
        unexpectedBetweenPrecedencegroupKeywordAndIdentifier, 
        name: identifier, 
        unexpectedBetweenIdentifierAndLeftBrace, 
        leftBrace: leftBrace, 
        unexpectedBetweenLeftBraceAndGroupAttributes, 
        groupAttributes: groupAttributes, 
        unexpectedBetweenGroupAttributesAndRightBrace, 
        rightBrace: rightBrace, 
        unexpectedAfterRightBrace, 
        trailingTrivia: trailingTrivia
      )
  }
}
